// Code generated by MockGen. DO NOT EDIT.
// Source: entity/asset.go

// Package mock_entity is a generated GoMock package.
package mock_entity

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	bson "gopkg.in/mgo.v2/bson"
)

// MockAssetInterface is a mock of AssetInterface interface.
type MockAssetInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAssetInterfaceMockRecorder
}

// MockAssetInterfaceMockRecorder is the mock recorder for MockAssetInterface.
type MockAssetInterfaceMockRecorder struct {
	mock *MockAssetInterface
}

// NewMockAssetInterface creates a new mock instance.
func NewMockAssetInterface(ctrl *gomock.Controller) *MockAssetInterface {
	mock := &MockAssetInterface{ctrl: ctrl}
	mock.recorder = &MockAssetInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAssetInterface) EXPECT() *MockAssetInterfaceMockRecorder {
	return m.recorder
}

// GetAddress mocks base method.
func (m *MockAssetInterface) GetAddress() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAddress")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAddress indicates an expected call of GetAddress.
func (mr *MockAssetInterfaceMockRecorder) GetAddress() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAddress", reflect.TypeOf((*MockAssetInterface)(nil).GetAddress))
}

// GetBlockchain mocks base method.
func (m *MockAssetInterface) GetBlockchain() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockchain")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBlockchain indicates an expected call of GetBlockchain.
func (mr *MockAssetInterfaceMockRecorder) GetBlockchain() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockchain", reflect.TypeOf((*MockAssetInterface)(nil).GetBlockchain))
}

// GetId mocks base method.
func (m *MockAssetInterface) GetId() bson.ObjectId {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetId")
	ret0, _ := ret[0].(bson.ObjectId)
	return ret0
}

// GetId indicates an expected call of GetId.
func (mr *MockAssetInterfaceMockRecorder) GetId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetId", reflect.TypeOf((*MockAssetInterface)(nil).GetId))
}

// GetName mocks base method.
func (m *MockAssetInterface) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockAssetInterfaceMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockAssetInterface)(nil).GetName))
}

// GetValue mocks base method.
func (m *MockAssetInterface) GetValue() float32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValue")
	ret0, _ := ret[0].(float32)
	return ret0
}

// GetValue indicates an expected call of GetValue.
func (mr *MockAssetInterfaceMockRecorder) GetValue() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValue", reflect.TypeOf((*MockAssetInterface)(nil).GetValue))
}
