// Code generated by MockGen. DO NOT EDIT.
// Source: service/asset.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	pb "cryptocurrencies-service/pb"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAssetServiceInterface is a mock of AssetServiceInterface interface.
type MockAssetServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAssetServiceInterfaceMockRecorder
}

// MockAssetServiceInterfaceMockRecorder is the mock recorder for MockAssetServiceInterface.
type MockAssetServiceInterfaceMockRecorder struct {
	mock *MockAssetServiceInterface
}

// NewMockAssetServiceInterface creates a new mock instance.
func NewMockAssetServiceInterface(ctrl *gomock.Controller) *MockAssetServiceInterface {
	mock := &MockAssetServiceInterface{ctrl: ctrl}
	mock.recorder = &MockAssetServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAssetServiceInterface) EXPECT() *MockAssetServiceInterfaceMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockAssetServiceInterface) Delete(req *pb.ID) (*pb.ID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", req)
	ret0, _ := ret[0].(*pb.ID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockAssetServiceInterfaceMockRecorder) Delete(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockAssetServiceInterface)(nil).Delete), req)
}

// Insert mocks base method.
func (m *MockAssetServiceInterface) Insert(req *pb.Asset) (*pb.Asset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", req)
	ret0, _ := ret[0].(*pb.Asset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Insert indicates an expected call of Insert.
func (mr *MockAssetServiceInterfaceMockRecorder) Insert(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockAssetServiceInterface)(nil).Insert), req)
}

// Read mocks base method.
func (m *MockAssetServiceInterface) Read(req *pb.ID) (*pb.Asset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", req)
	ret0, _ := ret[0].(*pb.Asset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockAssetServiceInterfaceMockRecorder) Read(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockAssetServiceInterface)(nil).Read), req)
}

// Update mocks base method.
func (m *MockAssetServiceInterface) Update(req *pb.Asset) (*pb.Asset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", req)
	ret0, _ := ret[0].(*pb.Asset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockAssetServiceInterfaceMockRecorder) Update(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockAssetServiceInterface)(nil).Update), req)
}
